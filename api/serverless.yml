service: ece6102-chatroom

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: python2.7
  region: us-east-1
  stage: ${opt:stage, self:provider.custom.defaultStage}
  profile: ${self:provider.custom.profiles.${self:provider.stage}}
  memorySize: 512
  timeout: 300
  custom:
    VERSION: v2
    defaultStage: dev
    profiles:
      dev: personal
      prod: personal
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:CreateTable
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"

functions:
  create:
    handler: channels/create.handler
    name: chatroom-api-${self:provider.custom.VERSION}-channel-create
    description: Handles the creation of a new channel
    events:
      - http:
          path: ${self:provider.custom.VERSION}/channels
          method: post
          cors: true

  get:
    handler: channels/get.handler
    name: chatroom-api-${self:provider.custom.VERSION}-channels-check
    description: Check if channel exists
    events:
      - http:
          path: ${self:provider.custom.VERSION}/channels/{id}
          method: get
          cors: true

  publish:
    handler: messages/publish.handler
    name: chatroom-api-${self:provider.custom.VERSION}-messages-publish
    description: Handles message publishing in a channel
    events:
      - http:
          path: ${self:provider.custom.VERSION}/channels/{id}/messages
          method: post
          cors: true

  messages:
    handler: messages/message.handler
    name: chatroom-api-${self:provider.custom.VERSION}-messages
    description: Handles all the messages from achannel
    events:
      - http:
          path: ${self:provider.custom.VERSION}/channels/{id}/messages
          method: get
          cors: true
